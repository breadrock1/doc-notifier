// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/files/analyse": {
            "post": {
                "description": "Analyse uploaded files by ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Analyse uploaded files by ids",
                "operationId": "analyse",
                "parameters": [
                    {
                        "description": "Document ids to analyse",
                        "name": "jsonQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.AnalyseFilesForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            }
        },
        "/files/download": {
            "post": {
                "description": "Download file from server",
                "produces": [
                    "multipart/form"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Download file from server",
                "operationId": "download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Path to file on server",
                        "name": "file_path",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            }
        },
        "/files/move": {
            "post": {
                "description": "Moving files to target directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Moving files to target directory",
                "operationId": "moving",
                "parameters": [
                    {
                        "description": "Document ids to move",
                        "name": "jsonQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.MoveFilesForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            }
        },
        "/files/remove": {
            "post": {
                "description": "Remove files from directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Remove files from directory",
                "operationId": "remove",
                "parameters": [
                    {
                        "description": "Document paths to remove",
                        "name": "jsonQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.RemoveFilesForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.RemoveFilesError"
                        }
                    }
                }
            }
        },
        "/files/unrecognized": {
            "get": {
                "description": "Get unrecognized documents",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get unrecognized documents",
                "operationId": "unrecognized",
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.UnrecognizedDocuments"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            }
        },
        "/files/upload": {
            "get": {
                "description": "Get upload file form",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get upload file form",
                "operationId": "upload-form",
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            },
            "post": {
                "description": "Upload file to server",
                "consumes": [
                    "multipart/form"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Upload file to server",
                "operationId": "upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File entity",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            }
        },
        "/hello/": {
            "get": {
                "description": "Check service is available",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Hello",
                "operationId": "hello",
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "503": {
                        "description": "Server does not available",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ServerErrorForm"
                        }
                    }
                }
            }
        },
        "/watcher/all": {
            "get": {
                "description": "Get watcher dirs list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "watcher"
                ],
                "summary": "Get watcher dirs list",
                "operationId": "watched-dirs",
                "responses": {
                    "200": {
                        "description": "Watched dirs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            }
        },
        "/watcher/attach": {
            "post": {
                "description": "Attach new directory to watcher",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "watcher"
                ],
                "summary": "Attach new directory to watcher",
                "operationId": "attach",
                "parameters": [
                    {
                        "description": "File entity",
                        "name": "jsonQuery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/endpoints.WatcherDirectoriesForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            }
        },
        "/watcher/pause": {
            "get": {
                "description": "Pause all watchers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "watcher"
                ],
                "summary": "Pause all watchers",
                "operationId": "pause",
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            }
        },
        "/watcher/run": {
            "get": {
                "description": "Run all watchers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "watcher"
                ],
                "summary": "Run all watchers",
                "operationId": "run",
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            }
        },
        "/watcher/upload": {
            "post": {
                "description": "Upload files to watcher directory",
                "consumes": [
                    "multipart/form"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "watcher"
                ],
                "summary": "Upload files to watcher directory",
                "operationId": "upload-watcher",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File entity",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Done",
                        "schema": {
                            "$ref": "#/definitions/endpoints.ResponseForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request message",
                        "schema": {
                            "$ref": "#/definitions/endpoints.BadRequestForm"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "endpoints.AnalyseFilesForm": {
            "type": "object",
            "properties": {
                "document_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "endpoints.BadRequestForm": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Bad Request message"
                },
                "status": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "endpoints.MoveFilesForm": {
            "type": "object",
            "properties": {
                "document_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target_directory": {
                    "type": "string"
                }
            }
        },
        "endpoints.RemoveFilesError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 403
                },
                "file_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[]"
                    ]
                },
                "message": {
                    "type": "string",
                    "example": "File not found"
                }
            }
        },
        "endpoints.RemoveFilesForm": {
            "type": "object",
            "properties": {
                "document_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "endpoints.ResponseForm": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Done"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "endpoints.ServerErrorForm": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Server Error message"
                },
                "status": {
                    "type": "integer",
                    "example": 503
                }
            }
        },
        "endpoints.UnrecognizedDocuments": {
            "type": "object",
            "properties": {
                "unrecognized": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/reader.DocumentPreview"
                    }
                }
            }
        },
        "endpoints.WatcherDirectoriesForm": {
            "type": "object",
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "./indexer"
                    ]
                }
            }
        },
        "reader.DocumentPreview": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "preview_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/reader.PreviewProperties"
                    }
                },
                "quality_recognition": {
                    "type": "integer"
                }
            }
        },
        "reader.PreviewProperties": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
