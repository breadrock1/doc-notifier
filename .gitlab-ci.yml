stages:
  - test
  - build
  - deploy

lint:
  image: registry.logoper.socialcode.ru/tools/golang-ci
  stage: test
  except:
    - master
  script:
    - golangci-lint run $(git ls-files | grep *.go)

test:
  image: registry.logoper.socialcode.ru/tools/golang-ci
  stage: test
  except:
    - master
  script:
    - mkdir -p ./tmp && for test_module in $(git ls-files test); do go test -v -count=1 -race $test_module; done
    - gocov convert ./tmp/cover.out | gocov-xml > ./tmp/coverage.xml
  coverage: /^coverage:\s(\d+(?:\.\d+)?%)/
  variables:
    CGO_ENABLED: 1
  artifacts:
    reports:
     coverage_report:
      coverage_format: cobertura
      path: ./tmp/coverage.xml


build_app:
  image: registry.logoper.socialcode.ru/tools/golang-ci
  stage: build
  only:
    - master
    - ci/initial-setup
  script:
    - go build -o doc-notifier
  artifacts:
    paths:
      - './doc-notifier'
    when: on_success
    expire_in: '10 minutes'

publish_image:
  image: docker:18
  stage: build
  needs: [build_app]
  only:
    - master
    - ci/initial-setup
  services:
    - docker:18-dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER registry.logoper.socialcode.ru --password-stdin
  script:
    - docker build -t "registry.logoper.socialcode.ru/docnotifier" .
    - docker push "registry.logoper.socialcode.ru/docnotifier"

deployment:
  image: registry.logoper.socialcode.ru/tools/base-alpine
  stage: deploy
  only:
    - master
    - ci/initial-setup
  before_script:
    - echo "${OVPN_CONFIG_CLIENT}" > $OVPN_CONFIG_FILE
    - echo "${OVPN_CREDENTIALS}" > $OVPN_AUTH_FILE
    - openvpn --config $OVPN_CONFIG_FILE --auth-user-pass $OVPN_AUTH_FILE --daemon
    - sleep 30
    - ping -c 1 10.11.34.212
  script:
    - sshpass -e scp -o stricthostkeychecking=no ./deployments/docker-compose.production.yml runner@10.11.34.212:~/services/docnotifier/docker-compose.yml
    - sshpass -e ssh -o stricthostkeychecking=no runner@10.11.34.212 "
      echo $SSHPASS | sudo -S docker stack deploy -c ~/services/docnotifier/docker-compose.yml docsearch  --with-registry-auth"
  variables:
    SSHPASS: $VPS_PASS
    OVPN_CONFIG_FILE: /etc/openvpn/aipartner.ovpn
    OVPN_AUTH_FILE: /etc/openvpn/auth.conf